services:
  prometheus:
    image: prom/prometheus:v2.53.3
    container_name: prometheus
    restart: always
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.external-url=https://picscore.net/prometheus'
      - '--web.route-prefix=/prometheus'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:9090/prometheus/-/healthy"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - lumina-network
    labels:
      org.label-schema.group: "monitoring"
      environment: "development"

  grafana:
    image: grafana/grafana:11.5.1
    container_name: grafana
    restart: always
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards/prometheus:/var/lib/grafana/dashboards/prometheus:ro
      - ./grafana/dashboards/ga:/var/lib/grafana/dashboards/ga:ro
      - ./grafana/secrets:/etc/grafana/secrets:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_SERVER_ROOT_URL=https://picscore.net/grafana
      - GF_SERVER_DOMAIN=picscore.net
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      # Google Analytics Environment Variables no longer needed as we're using the JSON file directly
      # - GF_SECURITY_ALLOW_EMBEDDING=true
      # - GF_PANELS_DISABLE_SANITIZE_HTML=true
    depends_on:
      prometheus:
        condition: service_healthy
    networks:
      - lumina-network
    labels:
      org.label-schema.group: "monitoring"
      environment: "development"
    # Install Required Plugins
    user: "0"
    entrypoint:
      - /bin/sh
      - -c
      - |
        grafana-cli plugins install blackcowmoo-googleanalytics-datasource
        grafana-cli plugins install grafana-bigquery-datasource
        exec /run.sh
    
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: always
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    networks:
      - lumina-network
    labels:
      org.label-schema.group: "monitoring"
      environment: "development"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    restart: always
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/kmsg:/dev/kmsg:ro
    networks:
      - lumina-network
    labels:
      org.label-schema.group: "monitoring"
      environment: "development"
    depends_on:
      - node-exporter

volumes:
  prometheus-data:
    name: prometheus-data
  grafana-data:
    name: grafana-data

networks:
  lumina-network:
    external: true